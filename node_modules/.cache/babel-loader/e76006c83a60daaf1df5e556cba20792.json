{"ast":null,"code":"var _jsxFileName = \"F:\\\\sunshine-full-project\\\\agustine-hotel--main\\\\src\\\\Components\\\\Book\\\\CheckOutForm.js\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport React, { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../Context/AuthContext/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckOutForm = _ref => {\n  _s();\n\n  let {\n    roomDetails,\n    checkOutDate,\n    checkindate\n  } = _ref;\n  const stripe = useStripe();\n  const navigate = useNavigate();\n  const elements = useElements();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [transactionID, setTransactionID] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [cardError, setCardError] = useState(\"\");\n  const [proccessing, setProccessing] = useState(false);\n  const [clientSecret, setClientSecret] = useState(\"\"); // const { price, Patientname, Patientemail, _id } = booking;\n\n  const {\n    price,\n    _id\n  } = roomDetails;\n  useEffect(() => {\n    fetch(\"https://hotel-web-server.vercel.app/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem('accesToken')}`\n      },\n      body: JSON.stringify({\n        price\n      })\n    }).then(res => res.json()).then(data => setClientSecret(data.clientSecret));\n  }, [price]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!stripe || !elements || proccessing) {\n      return;\n    }\n\n    const card = elements.getElement(CardElement);\n\n    if (card === null) {\n      return;\n    }\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card\n    });\n\n    if (error) {\n      console.log(error);\n      setCardError(error.message);\n    } else {\n      setCardError(\"\");\n    }\n\n    setSuccess('');\n    setProccessing(true);\n    const {\n      paymentIntent,\n      error: confirmError\n    } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: card,\n        billing_details: {\n          email: user === null || user === void 0 ? void 0 : user.email\n        }\n      }\n    });\n\n    if (confirmError) {\n      setCardError(confirmError.message);\n    }\n\n    if (paymentIntent.status === 'succeeded') {\n      setSuccess('Congrats Your Payment is Done');\n      setTransactionID(paymentIntent.id);\n      setProccessing(false);\n      toast.success('Payment Success');\n      navigate('/dashboard'); // const payment = {\n      //     email: user?.email,\n      //     transactionID: paymentIntent.id,\n      //     price,\n      //     bookingID: _id\n      // }\n\n      const paidRoom = {\n        checkin: checkindate,\n        checkout: checkOutDate,\n        transactionID: paymentIntent.id,\n        email: user.email,\n        price,\n        bookingID: _id\n      };\n      fetch('https://hotel-web-server.vercel.app/payments', {\n        method: 'POST',\n        headers: {\n          'content-type': \"application/json\",\n          authorization: `bearer ${localStorage.getItem('accessToken')}`\n        },\n        body: JSON.stringify(paidRoom)\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {\n        options: {\n          style: {\n            base: {\n              fontSize: \"16px\",\n              color: \"#424770\",\n              \"::placeholder\": {\n                color: \"#aab7c4\"\n              }\n            },\n            invalid: {\n              color: \"#9e2146\"\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: cardError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn bg-slate-200 text-slate-700 btn-sm my-4\",\n        type: \"submit\",\n        disabled: !stripe || !clientSecret,\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        children: transactionID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CheckOutForm, \"SyzQLEuWrMFdd4q1jvcNAEpsWo8=\", false, function () {\n  return [useStripe, useNavigate, useElements];\n});\n\n_c = CheckOutForm;\nexport default CheckOutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckOutForm\");","map":{"version":3,"names":["CardElement","useElements","useStripe","React","useEffect","useContext","useState","toast","useNavigate","AuthContext","CheckOutForm","roomDetails","checkOutDate","checkindate","stripe","navigate","elements","user","transactionID","setTransactionID","success","setSuccess","cardError","setCardError","proccessing","setProccessing","clientSecret","setClientSecret","price","_id","fetch","method","headers","authorization","localStorage","getItem","body","JSON","stringify","then","res","json","data","handleSubmit","event","preventDefault","card","getElement","error","paymentMethod","createPaymentMethod","type","console","log","message","paymentIntent","confirmError","confirmCardPayment","payment_method","billing_details","email","status","id","paidRoom","checkin","checkout","bookingID","style","base","fontSize","color","invalid"],"sources":["F:/sunshine-full-project/agustine-hotel--main/src/Components/Book/CheckOutForm.js"],"sourcesContent":["import { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport React, { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../Context/AuthContext/UserContext\";\n\n\n\nconst CheckOutForm = ({ roomDetails,checkOutDate,checkindate  }) => {\n    const stripe = useStripe();\n    const navigate = useNavigate()\n    const elements = useElements();\n    const { user } = useContext(AuthContext)\n    const [transactionID, setTransactionID] = useState(\"\");\n    const [success, setSuccess] = useState(\"\");\n    const [cardError, setCardError] = useState(\"\");\n    const [proccessing, setProccessing] = useState(false);\n    const [clientSecret, setClientSecret] = useState(\"\");\n\n    // const { price, Patientname, Patientemail, _id } = booking;\n    const { price, _id } = roomDetails;\n\n    useEffect(() => {\n        fetch(\"https://hotel-web-server.vercel.app/create-payment-intent\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${localStorage.getItem('accesToken')}`\n            },\n            body: JSON.stringify({ price }),\n        })\n            .then(res => res.json())\n            .then(data => setClientSecret(data.clientSecret));\n    }, [price]);\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        if (!stripe || !elements || proccessing) {\n            return;\n        }\n        const card = elements.getElement(CardElement);\n        if (card === null) {\n            return;\n        }\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: \"card\",\n            card,\n        });\n\n        if (error) {\n            console.log(error);\n            setCardError(error.message);\n        } else {\n            setCardError(\"\");\n        }\n        setSuccess('')\n        setProccessing(true)\n        const { paymentIntent, error: confirmError } = await stripe.confirmCardPayment(\n            clientSecret,\n            {\n                payment_method: {\n                    card: card,\n                    billing_details: {\n                       \n                        email: user?.email,\n                    },\n                },\n            },\n        );\n\n        if (confirmError) {\n            setCardError(confirmError.message)\n        }\n        if (paymentIntent.status === 'succeeded') {\n            setSuccess('Congrats Your Payment is Done')\n            setTransactionID(paymentIntent.id)\n            setProccessing(false)\n            toast.success('Payment Success')\n            navigate('/dashboard')\n            // const payment = {\n            //     email: user?.email,\n            //     transactionID: paymentIntent.id,\n            //     price,\n            //     bookingID: _id\n\n            // }\n            const paidRoom = {\n                checkin: checkindate,\n                checkout: checkOutDate,\n                transactionID: paymentIntent.id,\n                email: user.email,\n                price,\n                bookingID: _id\n               \n            }\n\n            fetch('https://hotel-web-server.vercel.app/payments', {\n                method: 'POST',\n                headers: {\n                    'content-type': \"application/json\",\n                    authorization: `bearer ${localStorage.getItem('accessToken')}`\n                },\n                body: JSON.stringify(paidRoom)\n            })\n                .then(res => res.json())\n                .then(data => {\n                    console.log(data);\n                })\n\n        }\n\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <CardElement\n                    options={{\n                        style: {\n                            base: {\n                                fontSize: \"16px\",\n                                color: \"#424770\",\n                                \"::placeholder\": {\n                                    color: \"#aab7c4\",\n                                },\n                            },\n                            invalid: {\n                                color: \"#9e2146\",\n                            },\n                        },\n                    }}\n                />\n                <p className=\"text-red-500\">{cardError}</p>\n                <button\n                    className=\"btn bg-slate-200 text-slate-700 btn-sm my-4\"\n                    type=\"submit\"\n                    disabled={!stripe || !clientSecret}\n                >\n                    Pay\n                </button>\n            </form>\n            {\n                success && <div>\n                    <p className=\"text-green-500\">{success}</p>\n                    <p className=\"\">{transactionID}</p>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default CheckOutForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}