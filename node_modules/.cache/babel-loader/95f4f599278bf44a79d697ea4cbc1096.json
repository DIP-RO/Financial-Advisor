{"ast":null,"code":"import _slicedToArray from \"F:/sunshine-full-project/agustine-hotel--main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nvar useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\n\nvar QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n\n  var _React$useState = React.useState(function () {\n    return createValue();\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      value = _React$useState2[0];\n\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\n\nexport { QueryErrorResetBoundary, useQueryErrorResetBoundary };","map":{"version":3,"mappings":";;;AAUA,SAASA,WAAT,GAAqD;EACnD,IAAIC,QAAO,GAAG,KAAd;EACA,OAAO;IACLC,UAAU,EAAE,sBAAM;MAChBD,QAAO,GAAG,KAAVA;IAFG;IAILE,KAAK,EAAE,iBAAM;MACXF,QAAO,GAAG,IAAVA;IALG;IAOLA,OAAO,EAAE,mBAAM;MACb,OAAOA,QAAP;IACD;EATI,CAAP;AAWD;;AAED,IAAMG,8BAA8B,gBAAGC,KAAK,CAACC,aAAND,CAAoBL,WAAW,EAA/BK,CAAvC,C,CAAA;;AAIO,IAAME,0BAA0B,GAAG,SAA7BA,0BAA6B;EAAA,OACxCF,KAAK,CAACG,UAANH,CAAiBD,8BAAjBC,CADwC;AAAA,CAAnC,C,CACL;;;AAUK,IAAMI,uBAAuB,GAAG,SAA1BA,uBAA0B,OAEH;EAAA,IADlCC,QACkC,QADlCA,QACkC;;EAClC,sBAAgBL,KAAK,CAACM,QAANN,CAAe;IAAA,OAAML,WAAW,EAAjB;EAAA,CAAfK,CAAhB;EAAA;EAAA,IAAOO,KAAP;;EACA,oBACEP,oBAACD,8BAAD,CAAgCS,QAAhC;IAAyCD,KAAK,EAAEA;EAAhD,GACG,OAAOF,QAAP,KAAoB,UAApB,GACIA,QAAD,CAAuBE,KAAvB,CADH,GAEGF,QAHN,CADF;AAOD,CAXM","names":["createValue","isReset","clearReset","reset","QueryErrorResetBoundaryContext","React","createContext","useQueryErrorResetBoundary","useContext","QueryErrorResetBoundary","children","useState","value","Provider"],"sources":["F:\\sunshine-full-project\\agustine-hotel--main\\node_modules\\@tanstack\\react-query\\src\\QueryErrorResetBoundary.tsx"],"sourcesContent":["import * as React from 'react'\n\n// CONTEXT\n\nexport interface QueryErrorResetBoundaryValue {\n  clearReset: () => void\n  isReset: () => boolean\n  reset: () => void\n}\n\nfunction createValue(): QueryErrorResetBoundaryValue {\n  let isReset = false\n  return {\n    clearReset: () => {\n      isReset = false\n    },\n    reset: () => {\n      isReset = true\n    },\n    isReset: () => {\n      return isReset\n    },\n  }\n}\n\nconst QueryErrorResetBoundaryContext = React.createContext(createValue())\n\n// HOOK\n\nexport const useQueryErrorResetBoundary = () =>\n  React.useContext(QueryErrorResetBoundaryContext)\n\n// COMPONENT\n\nexport interface QueryErrorResetBoundaryProps {\n  children:\n    | ((value: QueryErrorResetBoundaryValue) => React.ReactNode)\n    | React.ReactNode\n}\n\nexport const QueryErrorResetBoundary = ({\n  children,\n}: QueryErrorResetBoundaryProps) => {\n  const [value] = React.useState(() => createValue())\n  return (\n    <QueryErrorResetBoundaryContext.Provider value={value}>\n      {typeof children === 'function'\n        ? (children as Function)(value)\n        : children}\n    </QueryErrorResetBoundaryContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}